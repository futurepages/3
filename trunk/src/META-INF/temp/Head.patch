Index: ../Futurepages2/src/org/futurepages/tags/core/webcomponent/WebContainer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Futurepages2/src/org/futurepages/tags/core/webcomponent/WebContainer.java	(revision 999)
+++ ../Futurepages2/src/org/futurepages/tags/core/webcomponent/WebContainer.java	(revision )
@@ -53,6 +53,8 @@
 
 	private StringBuilder headSB = null;
 
+	private StringBuilder specialHeadTitle = null;
+
 	private Map<String, ImportComponentRes> components;
 
 
@@ -111,15 +113,19 @@
 		}
 		headBufferBegin.append("><head>");
 
+		//invoca o conteúdo dentro do container
+		getJspBody().invoke(evalResult);
+
 		if (HeadTitleFilter.isPretty()) {
-			if (!Is.empty(this.headTitle)) {
+			if (!Is.empty(specialHeadTitle)) {
+				headBufferBegin.append("<title>").append(specialHeadTitle).append("</title>");
+			} else if (!Is.empty(this.headTitle)) {
 				headBufferBegin.append("<title>").append(headTitle).append(" | ").append(HeadTitleFilter.getPrettyTitle()).append("</title>");
 			} else {
 				headBufferBegin.append("<title>").append(HeadTitleFilter.getPrettyTitle()).append(HeadTitleFilter.SEPARATOR).append(HeadTitleFilter.getGlobalTitle()).append("</title>");
 			}
 		}
 
-		getJspBody().invoke(evalResult); //invoca o conteúdo dentro do container
 
 		//Head Content
 		if(headSB!=null){
@@ -218,5 +224,16 @@
 			headSB = new StringBuilder();
 		}
 		return headSB;
+	}
+
+	public void addSpecialHeadContent(String specialHeadContent) {
+		getSpecialHeadTitle().append(specialHeadContent);
+	}
+
+	public StringBuilder getSpecialHeadTitle() {
+		if (specialHeadTitle == null) {
+			specialHeadTitle = new StringBuilder();
+		}
+		return specialHeadTitle;
 	}
 }
\ No newline at end of file
Index: ../Futurepages2/src/META-INF/futurepages.tld
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Futurepages2/src/META-INF/futurepages.tld	(revision 999)
+++ ../Futurepages2/src/META-INF/futurepages.tld	(revision )
@@ -479,6 +479,12 @@
 		<tag-class>org.futurepages.tags.core.webcomponent.Head</tag-class>
 		<body-content>scriptless</body-content>
 		<display-name>head</display-name>
+		<attribute>
+			<name>specialHeadTitle</name>
+			<required>false</required>
+			<rtexprvalue>true</rtexprvalue>
+			<type>java.lang.String</type>
+		</attribute>
 	</tag>
 	<tag>
 		<name>importModuleLayout</name>
@@ -1437,7 +1443,7 @@
 			<name>value</name>
 			<required>false</required>
 			<rtexprvalue>true</rtexprvalue>
-			<type>java.lang.String</type>
+			<type>java.lang.Object</type>
 		</attribute>
 	</tag>
 	<tag>
Index: ../Futurepages2/src/org/futurepages/tags/core/webcomponent/Head.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Futurepages2/src/org/futurepages/tags/core/webcomponent/Head.java	(revision 999)
+++ ../Futurepages2/src/org/futurepages/tags/core/webcomponent/Head.java	(revision )
@@ -5,7 +5,9 @@
 import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.tagext.SimpleTagSupport;
 import org.futurepages.annotations.Tag;
+import org.futurepages.annotations.TagAttribute;
 import org.futurepages.core.tags.build.ContentTypeEnum;
+import org.futurepages.util.Is;
 
 @Tag(bodyContent = ContentTypeEnum.SCRIPTLESS)
 public final class Head extends SimpleTagSupport {
@@ -13,6 +15,9 @@
 
 	private WebContainer myContainer;
 
+	@TagAttribute(required = false)
+	private String specialHeadTitle;
+
 	@Override
 	public void doTag() throws JspException, IOException {
 		getMyContainer();
@@ -22,7 +27,18 @@
 					getJspBody().invoke(evalResult);
 					myContainer.addHeadContent(evalResult.getBuffer().toString());
 				}
+				if (!Is.empty(specialHeadTitle)) {
+					myContainer.addSpecialHeadContent(specialHeadTitle);
-		}
+				}
+		}
+	}
+
+	public String getSpecialHeadTitle() {
+		return specialHeadTitle;
+	}
+
+	public void setSpecialHeadTitle(String specialHeadTitle) {
+		this.specialHeadTitle = specialHeadTitle;
 	}
 
 	private WebContainer getMyContainer() {
\ No newline at end of file
